[
  {
    "objectID": "task2.html",
    "href": "task2.html",
    "title": "task 2",
    "section": "",
    "text": "For the subjective enhancement of a greyscale image \\(G = g(x, y)\\) , a transformation \\(T_G\\) is performed as a so-called gamma correction in the form \\(T_G : g \\rightarrow f\\) with \\(f(x, y) = c g^\\gamma (x, y)\\) where \\(g, f \\in [0, 255]\\).\n\nSketch the transformation curve \\(T_G\\) for \\(\\gamma_1 = 0.5\\) and \\(\\gamma_2 = 2\\)\n\n\nThe first step is to find the values of \\(c\\) for both cases. Since \\(\\max(f) = \\max(g) = 255\\), we have \\(c = 255 / 255^\\gamma\\).\n\n\nCode\nfrom matplotlib import pyplot as plt\nimport numpy as np\n\n\ndef draw_transform_curve(gamma: float, ax: plt.Axes = None, label: bool = True):\n    if not ax:\n        fig, ax = plt.subplots()\n    x = np.linspace(0, 255, 256)\n    c = 255 / 255**gamma\n    y = c * x**gamma\n    message = f\"$f = {c:0.4f} \\\\times g^{{{gamma}}}$\"\n    if label:\n        ax.plot(x, y, label=message)\n    else:\n        ax.plot(x, y)\n    ax.set_xlabel(\"g\")\n    if label:\n        ax.set_ylabel(\"f\")\n    else:\n        ax.set_ylabel(message)\n\n\nfig, ax = plt.subplots()\nfor gamma in [0.5, 2]:\n    draw_transform_curve(gamma, ax)\nax.set_title(f\"Transformation curve for $\\\\gamma=0.5$ and $\\\\gamma=2$\")\nax.legend()\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\nHow is the coeficient c typically determined? (2pts)\n\n\nThe coefficient \\(c\\) is typically determined such that the maximum value of the input image is mapped to the maximum value of the output image. This is done to ensure that the full dynamic range of the output image is used.\nAs mentioned above, \\(c = 255 / 255^\\gamma\\).\n\n\nIn which respect and for which type of input images \\(G\\) do the two gamma values \\(\\gamma_1,\\;\\gamma_2\\) lead to an image enhancement respectively? (2pts)\n\n\nFor \\(\\gamma &lt; 1\\), the transformation curve is concave, which means that the lower intensity values are stretched more than the higher intensity values. This leads to a brighter image with more contrast. This is useful for images with low contrast.\nFor \\(\\gamma &gt; 1\\), the transformation curve is convex, which means that the higher intensity values are stretched more than the lower intensity values. This leads to a darker image with more contrast. This is useful for images with high contrast.\n\n\nWhat should be the minimum slope of the transform function?\n\nfor a grey value spread (2pts)\nfor a grey value compression (2pts)\n\n\n\nIt’s important to note that a slope of exactly 1 implies no change in contrast, as the transformation function becomes an identity mapping. Also, a slope of 0 implies that the output image will be a constant value, which is not useful for image enhancement.\n\nFor a grey value spread, the minimum slope of the transform function should be 1.\nFor a grey value compression, the minimum slope of the transform function should be 0 (and smaller than 1). For instance, in this function:\n\n\n\n\n\n\n\n\n\n\nAs we can see, the gray values between (80, 160) are streched between (40, 200) which has a slope greater than 1. On the other hand, the gray values between (160, 255) are compressed between (200, 255) which has a slope smaller than 1."
  },
  {
    "objectID": "task1.html",
    "href": "task1.html",
    "title": "Task 1",
    "section": "",
    "text": "Task 1\nThe Fourier transformation \\(f(x, y) \\rightarrowtail F(u, v)\\) of a greyscale image \\(f(x,y)\\) results in a band-limited signal in the spatial frequency range with maximum frequencies \\(f_{umax}\\) and \\(ƒ_{vmax}\\). For representation in the computer, the (partial) image is sampled in x direction with 20 sampling points per mm and in y direction with 10 sampling points per mm.\n\n\nWhat is the theoretical maximum value of \\(f_{umax}\\) and \\(f_{vmax}\\) if error-free image reconstruction from the digital image should be possible (not using any compressive-sensing techniques)? (6pts)\n\n\n\nAccording to the Nyquist sampling theorem, the maximum representable frequency (Nyquist frequency) in each direction is half the sampling frequency. The sampling frequency can be derived from the given sampling points per mm.\n\nSampling frequency in x is \\(f_{sx}\\) and the Nyquist frequency in x is \\(f_{umax}\\): \\[\\begin{align*}\n  &f_{sx} = 20\\;\\text{points/mm} = 20 \\times 10^3 \\, \\text{points/m} \\\\\n  \\implies &f_{umax} = \\frac{f_{sx}}{2} = 10.0 \\, \\text{kHz}\n\\end{align*}\\]\nSampling frequency in y is \\(f_{sy}\\) and the Nyquist frequency in y is \\(f_{vmax}\\): \\[\\begin{align*}\n  &f_{sy} = 10 \\, \\text{points/mm} = 10 \\times 10^3 \\, \\text{points/m} \\\\\n  \\implies &f_{vmax} = \\frac{f_{sy}}{2} = 5.0 \\, \\text{kHz}\n\\end{align*}\\]\n\nThis ensures error-free reconstruction, as the digital image will contain all frequency components of the original image within the Nyquist limit. Frequencies above these limits would result in aliasing, violating error-free reconstruction conditions.\n\n\nWhat is the minimum memory requirement for the color image \\(f_F(x, y)\\) when stored in a conventional computer system, if \\(1024\\) values are to be distinguished per color channel. Describe the image format to be used.\n\n\nTo start lets find the number of ixels\nLet the image dimensions in mm be \\(L_x\\) (width) and \\(L_y\\) (height).\n- Pixels in \\(x\\)-direction: \\(N_x = 10.0 \\cdot L_x\\) - Pixels in \\(y\\)-direction: \\(N_y = 5.0 \\cdot L_y\\) - Total number of pixels: \\[\nN_{\\text{pixels}} = N_x \\cdot N_y = 50.0 \\cdot L_x \\cdot L_y\n\\]\nEach pixel in a color image has values for three color channels: Red, Green, and Blue (RGB). Each channel can store \\(1024\\) distinct values, which means \\(log_2^{1024} = 10.0\\) bits per channel.\nTotal bits per pixel: \\(b = 10.0 \\times 3 = 30.0\\) bits/pixel.\nThe memory requirement is the product of the number of pixels and bits per pixel: \\[\n\\text{Used Memory} = N_{\\text{pixels}} \\cdot b = (50.0 \\cdot L_x \\cdot L_y) \\cdot b \\, \\text{bits} = 6.25 \\cdot L_x \\cdot L_y \\cdot 30.0 \\, \\text{bytes}\n\\]\nTODO: Im not sure about the answer, I think it should not depend on \\(L_x\\) and \\(L_y\\).\n\n\nHow many colors could be represented with the quantization chosen in sub-task 3? (2pts)\n\n\nWhere is sub-task 3? :("
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "imaging_ai",
    "section": "",
    "text": "Code\nimport sys\nsys.executable\n\n\n'/opt/hostedtoolcache/Python/3.10.15/x64/bin/python3'\n\n\n\nIntroduction\ntask 1: task1.qmd\ntask 2: task2.qmd"
  }
]